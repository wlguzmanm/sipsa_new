package gov.dane.sipsa.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "COORDENADA".
*/
public class CoordenadaDao extends AbstractDao<Coordenada, Long> {

    public static final String TABLENAME = "COORDENADA";

    /**
     * Properties of entity Coordenada.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property P_id_fuente = new Property(1, Long.class, "p_id_fuente", false, "P_ID_FUENTE");
        public final static Property P_longitud_gps = new Property(2, Double.class, "p_longitud_gps", false, "P_LONGITUD_GPS");
        public final static Property P_latitud_gps = new Property(3, Double.class, "p_latitud_gps", false, "P_LATITUD_GPS");
        public final static Property P_altitud_gps = new Property(4, Double.class, "p_altitud_gps", false, "P_ALTITUD_GPS");
        public final static Property P_precision_gps = new Property(5, Double.class, "p_precision_gps", false, "P_PRECISION_GPS");
        public final static Property P_longitud_dmc = new Property(6, Double.class, "p_longitud_dmc", false, "P_LONGITUD_DMC");
        public final static Property P_latitud_dmc = new Property(7, Double.class, "p_latitud_dmc", false, "P_LATITUD_DMC");
        public final static Property P_altitud_dmc = new Property(8, Double.class, "p_altitud_dmc", false, "P_ALTITUD_DMC");
        public final static Property P_precision_dmc = new Property(9, Double.class, "p_precision_dmc", false, "P_PRECISION_DMC");
    };


    public CoordenadaDao(DaoConfig config) {
        super(config);
    }
    
    public CoordenadaDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"COORDENADA\" (" + //
                "\"_id\" INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: id
                "\"P_ID_FUENTE\" INTEGER," + // 1: p_id_fuente
                "\"P_LONGITUD_GPS\" REAL," + // 2: p_longitud_gps
                "\"P_LATITUD_GPS\" REAL," + // 3: p_latitud_gps
                "\"P_ALTITUD_GPS\" REAL," + // 4: p_altitud_gps
                "\"P_PRECISION_GPS\" REAL," + // 5: p_precision_gps
                "\"P_LONGITUD_DMC\" REAL," + // 6: p_longitud_dmc
                "\"P_LATITUD_DMC\" REAL," + // 7: p_latitud_dmc
                "\"P_ALTITUD_DMC\" REAL," + // 8: p_altitud_dmc
                "\"P_PRECISION_DMC\" REAL);"); // 9: p_precision_dmc
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"COORDENADA\"";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, Coordenada entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        Long p_id_fuente = entity.getP_id_fuente();
        if (p_id_fuente != null) {
            stmt.bindLong(2, p_id_fuente);
        }
 
        Double p_longitud_gps = entity.getP_longitud_gps();
        if (p_longitud_gps != null) {
            stmt.bindDouble(3, p_longitud_gps);
        }
 
        Double p_latitud_gps = entity.getP_latitud_gps();
        if (p_latitud_gps != null) {
            stmt.bindDouble(4, p_latitud_gps);
        }
 
        Double p_altitud_gps = entity.getP_altitud_gps();
        if (p_altitud_gps != null) {
            stmt.bindDouble(5, p_altitud_gps);
        }
 
        Double p_precision_gps = entity.getP_precision_gps();
        if (p_precision_gps != null) {
            stmt.bindDouble(6, p_precision_gps);
        }
 
        Double p_longitud_dmc = entity.getP_longitud_dmc();
        if (p_longitud_dmc != null) {
            stmt.bindDouble(7, p_longitud_dmc);
        }
 
        Double p_latitud_dmc = entity.getP_latitud_dmc();
        if (p_latitud_dmc != null) {
            stmt.bindDouble(8, p_latitud_dmc);
        }
 
        Double p_altitud_dmc = entity.getP_altitud_dmc();
        if (p_altitud_dmc != null) {
            stmt.bindDouble(9, p_altitud_dmc);
        }
 
        Double p_precision_dmc = entity.getP_precision_dmc();
        if (p_precision_dmc != null) {
            stmt.bindDouble(10, p_precision_dmc);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public Coordenada readEntity(Cursor cursor, int offset) {
        Coordenada entity = new Coordenada( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getLong(offset + 1), // p_id_fuente
            cursor.isNull(offset + 2) ? null : cursor.getDouble(offset + 2), // p_longitud_gps
            cursor.isNull(offset + 3) ? null : cursor.getDouble(offset + 3), // p_latitud_gps
            cursor.isNull(offset + 4) ? null : cursor.getDouble(offset + 4), // p_altitud_gps
            cursor.isNull(offset + 5) ? null : cursor.getDouble(offset + 5), // p_precision_gps
            cursor.isNull(offset + 6) ? null : cursor.getDouble(offset + 6), // p_longitud_dmc
            cursor.isNull(offset + 7) ? null : cursor.getDouble(offset + 7), // p_latitud_dmc
            cursor.isNull(offset + 8) ? null : cursor.getDouble(offset + 8), // p_altitud_dmc
            cursor.isNull(offset + 9) ? null : cursor.getDouble(offset + 9) // p_precision_dmc
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, Coordenada entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setP_id_fuente(cursor.isNull(offset + 1) ? null : cursor.getLong(offset + 1));
        entity.setP_longitud_gps(cursor.isNull(offset + 2) ? null : cursor.getDouble(offset + 2));
        entity.setP_latitud_gps(cursor.isNull(offset + 3) ? null : cursor.getDouble(offset + 3));
        entity.setP_altitud_gps(cursor.isNull(offset + 4) ? null : cursor.getDouble(offset + 4));
        entity.setP_precision_gps(cursor.isNull(offset + 5) ? null : cursor.getDouble(offset + 5));
        entity.setP_longitud_dmc(cursor.isNull(offset + 6) ? null : cursor.getDouble(offset + 6));
        entity.setP_latitud_dmc(cursor.isNull(offset + 7) ? null : cursor.getDouble(offset + 7));
        entity.setP_altitud_dmc(cursor.isNull(offset + 8) ? null : cursor.getDouble(offset + 8));
        entity.setP_precision_dmc(cursor.isNull(offset + 9) ? null : cursor.getDouble(offset + 9));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(Coordenada entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(Coordenada entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
