package gov.dane.sipsa.dao;

import java.util.List;
import gov.dane.sipsa.dao.DaoSession;
import de.greenrobot.dao.DaoException;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit. 
/**
 * Entity mapped to table "ARTICULO".
 */
public class Articulo {

    private Long articacoId;
    private Long artiId;
    private String artiNombre;
    private String cacoNombre;
    private String tireNombre;
    private String grupNombre;
    private String articacoRegicaLinea;
    private Long tireId;
    private Long cacoId;

    private String tipo;
    private String frecuencia;
    private String unidad;
    private String observacion;


    /** Used to resolve relations */
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    private transient ArticuloDao myDao;

    private List<Recoleccion> artiPrincipal;

    public Articulo() {
    }

    public Articulo(Long articacoId) {
        this.articacoId = articacoId;
    }

    public Articulo(Long articacoId, Long artiId, String artiNombre, String cacoNombre, String tireNombre, String grupNombre, String articacoRegicaLinea, Long tireId, Long cacoId) {
        this.articacoId = articacoId;
        this.artiId = artiId;
        this.artiNombre = artiNombre;
        this.cacoNombre = cacoNombre;
        this.tireNombre = tireNombre;
        this.grupNombre = grupNombre;
        this.articacoRegicaLinea = articacoRegicaLinea;
        this.tireId = tireId;
        this.cacoId = cacoId;
    }

    public Articulo(Long articacoId, Long artiId, String artiNombre, String cacoNombre, String tireNombre, String grupNombre, String articacoRegicaLinea, Long tireId, Long cacoId,
                    String tipo, String frecuencia, String unidad, String observacion) {
        this.articacoId = articacoId;
        this.artiId = artiId;
        this.artiNombre = artiNombre;
        this.cacoNombre = cacoNombre;
        this.tireNombre = tireNombre;
        this.grupNombre = grupNombre;
        this.articacoRegicaLinea = articacoRegicaLinea;
        this.tireId = tireId;
        this.cacoId = cacoId;
        this.tipo = tipo;
        this.frecuencia = frecuencia;
        this.unidad = unidad;
        this.observacion = observacion;
    }

    /** called by internal mechanisms, do not call yourself. */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getArticuloDao() : null;
    }

    public Long getArticacoId() {
        return articacoId;
    }

    public void setArticacoId(Long articacoId) {
        this.articacoId = articacoId;
    }

    public Long getArtiId() {
        return artiId;
    }

    public void setArtiId(Long artiId) {
        this.artiId = artiId;
    }

    public String getArtiNombre() {
        return artiNombre;
    }

    public void setArtiNombre(String artiNombre) {
        this.artiNombre = artiNombre;
    }

    public String getCacoNombre() {
        return cacoNombre;
    }

    public void setCacoNombre(String cacoNombre) {
        this.cacoNombre = cacoNombre;
    }

    public String getTireNombre() {
        return tireNombre;
    }

    public void setTireNombre(String tireNombre) {
        this.tireNombre = tireNombre;
    }

    public String getGrupNombre() {
        return grupNombre;
    }

    public void setGrupNombre(String grupNombre) {
        this.grupNombre = grupNombre;
    }

    public String getArticacoRegicaLinea() {
        return articacoRegicaLinea;
    }

    public void setArticacoRegicaLinea(String articacoRegicaLinea) {
        this.articacoRegicaLinea = articacoRegicaLinea;
    }

    public Long getTireId() {
        return tireId;
    }

    public void setTireId(Long tireId) {
        this.tireId = tireId;
    }

    public Long getCacoId() {
        return cacoId;
    }

    public void setCacoId(Long cacoId) {
        this.cacoId = cacoId;
    }

    public String getTipo() {
        return tipo;
    }

    public void setTipo(String tipo) {
        this.tipo = tipo;
    }

    public String getFrecuencia() {
        return frecuencia;
    }

    public void setFrecuencia(String frecuencia) {
        this.frecuencia = frecuencia;
    }

    public String getUnidad() {
        return unidad;
    }

    public void setUnidad(String unidad) {
        this.unidad = unidad;
    }

    public String getObservacion() {
        return observacion;
    }

    public void setObservacion(String observacion) {
        this.observacion = observacion;
    }





    /** To-many relationship, resolved on first access (and after reset). Changes to to-many relations are not persisted, make changes to the target entity. */
    public List<Recoleccion> getArtiPrincipal() {
        if (artiPrincipal == null) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            RecoleccionDao targetDao = daoSession.getRecoleccionDao();
            List<Recoleccion> artiPrincipalNew = targetDao._queryArticulo_ArtiPrincipal(articacoId);
            synchronized (this) {
                if(artiPrincipal == null) {
                    artiPrincipal = artiPrincipalNew;
                }
            }
        }
        return artiPrincipal;
    }

    /** Resets a to-many relationship, making the next get call to query for a fresh result. */
    public synchronized void resetArtiPrincipal() {
        artiPrincipal = null;
    }

    /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.delete(this);
    }

    /** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.update(this);
    }

    /** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.refresh(this);
    }


    @Override
    public String toString() {
        return artiNombre;
    }
}
