package gov.dane.sipsa.dao;

import java.io.Serializable;
import java.util.List;

import de.greenrobot.dao.DaoException;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit. 

/**
 * Entity mapped to table "FUENTE_DISTRITO".
 */
public class FuenteDistrito implements Serializable{

    private Long fuenId;
    private String muniId;
    private String fuenTelefono;
    private String fuenDireccion;
    private String fuenEmail;
    private String fuenNombre;
    private String muniNombre;
    private String fuenNombreInformante;

    /** Para distrito*/
    private String fuenTelefonoInformante = null;
    //private String fuenCodigoInterno = null;
    private Long tireId;

    /** Used to resolve relations */
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    private transient FuenteDistritoDao myDao;

    private List<FuenteArticulo> fuente;
    private List<Recoleccion> fuenPrincipal;

    public FuenteDistrito() {
    }

    public FuenteDistrito(Long fuenId) {
        this.fuenId = fuenId;
    }

    public FuenteDistrito(Long fuenId, String muniId, String fuenTelefono, String fuenDireccion, String fuenEmail, String fuenNombre, String muniNombre, String fuenNombreInformante) {
        this.fuenId = fuenId;
        this.muniId = muniId;
        this.fuenTelefono = fuenTelefono;
        this.fuenDireccion = fuenDireccion;
        this.fuenEmail = fuenEmail;
        this.fuenNombre = fuenNombre;
        this.muniNombre = muniNombre;
        this.fuenNombreInformante = fuenNombreInformante;
    }

    public FuenteDistrito(Long fuenId, String muniId, String fuenTelefono, String fuenDireccion,
                          String fuenEmail, String fuenNombre, String muniNombre, String fuenNombreInformante,
                          String fuenTelefonoInformante, String fuenCodigoInterno, Long tireId) {
        this.fuenId = fuenId;
        this.muniId = muniId;
        this.fuenTelefono = fuenTelefono;
        this.fuenDireccion = fuenDireccion;
        this.fuenEmail = fuenEmail;
        this.fuenNombre = fuenNombre;
        this.muniNombre = muniNombre;
        this.fuenNombreInformante = fuenNombreInformante;
        this.fuenTelefonoInformante = fuenTelefonoInformante;
        //this.fuenCodigoInterno = fuenCodigoInterno;
        this.tireId = tireId;
    }

    /** called by internal mechanisms, do not call yourself. */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getFuenteDistritoDao() : null;
    }

    public Long getFuenId() {
        return fuenId;
    }

    public void setFuenId(Long fuenId) {
        this.fuenId = fuenId;
    }

    public String getMuniId() {
        return muniId;
    }

    public void setMuniId(String muniId) {
        this.muniId = muniId;
    }

    public String getFuenTelefono() {
        return fuenTelefono;
    }

    public void setFuenTelefono(String fuenTelefono) {
        this.fuenTelefono = fuenTelefono;
    }

    public String getFuenDireccion() {
        return fuenDireccion;
    }

    public void setFuenDireccion(String fuenDireccion) {
        this.fuenDireccion = fuenDireccion;
    }

    public String getFuenEmail() {
        return fuenEmail;
    }

    public void setFuenEmail(String fuenEmail) {
        this.fuenEmail = fuenEmail;
    }

    public String getFuenNombre() {
        return fuenNombre;
    }

    public void setFuenNombre(String fuenNombre) {
        this.fuenNombre = fuenNombre;
    }

    public String getMuniNombre() {
        return muniNombre;
    }

    public void setMuniNombre(String muniNombre) {
        this.muniNombre = muniNombre;
    }

    public String getFuenNombreInformante() {
        return fuenNombreInformante;
    }

    public void setFuenNombreInformante(String fuenNombreInformante) {
        this.fuenNombreInformante = fuenNombreInformante;
    }

    public Long getTireId() {
        return tireId;
    }

    public void setTireId(Long tireId) {
        this.tireId = tireId;
    }

    public String getFuenTelefonoInformante() {
        return fuenTelefonoInformante;
    }

    public void setFuenTelefonoInformante(String fuenTelefonoInformante) {
        this.fuenTelefonoInformante = fuenTelefonoInformante;
    }

    /*public String getFuenCodigoInterno() {
        return fuenCodigoInterno;
    }

    public void setFuenCodigoInterno(String fuenCodigoInterno) {
        this.fuenCodigoInterno = fuenCodigoInterno;
    }*/

    /** To-many relationship, resolved on first access (and after reset). Changes to to-many relations are not persisted, make changes to the target entity. */
    public List<FuenteArticulo> getFuente() {
        if (fuente == null) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            FuenteArticuloDao targetDao = daoSession.getFuenteArticuloDao();
            List<FuenteArticulo> fuenteNew = targetDao._queryFuente_Fuente(fuenId);
            synchronized (this) {
                if(fuente == null) {
                    fuente = fuenteNew;
                }
            }
        }
        return fuente;
    }

    /** Resets a to-many relationship, making the next get call to query for a fresh result. */
    public synchronized void resetFuente() {
        fuente = null;
    }

    /** To-many relationship, resolved on first access (and after reset). Changes to to-many relations are not persisted, make changes to the target entity. */
    public List<Recoleccion> getFuenPrincipal() {
        if (fuenPrincipal == null) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            RecoleccionDao targetDao = daoSession.getRecoleccionDao();
            List<Recoleccion> fuenPrincipalNew = targetDao._queryFuente_FuenPrincipal(fuenId);
            synchronized (this) {
                if(fuenPrincipal == null) {
                    fuenPrincipal = fuenPrincipalNew;
                }
            }
        }
        return fuenPrincipal;
    }

    /** Resets a to-many relationship, making the next get call to query for a fresh result. */
    public synchronized void resetFuenPrincipal() {
        fuenPrincipal = null;
    }

    /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.delete(this);
    }

    /** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.update(this);
    }

    /** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.refresh(this);
    }

}
