package co.gov.dane.sipsa.backend.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * DAO for table "FUENTE".
*/
public class FuenteDao extends AbstractDao<Fuente, Long> {

    public static final String TABLENAME = "FUENTE";

    /**
     * Properties of entity Fuente.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property FuenId = new Property(0, Long.class, "fuenId", true, "FUEN_ID");
        public final static Property MuniId = new Property(1, String.class, "muniId", false, "MUNI_ID");
        public final static Property FuenTelefono = new Property(2, String.class, "fuenTelefono", false, "FUEN_TELEFONO");
        public final static Property FuenDireccion = new Property(3, String.class, "fuenDireccion", false, "FUEN_DIRECCION");
        public final static Property FuenEmail = new Property(4, String.class, "fuenEmail", false, "FUEN_EMAIL");
        public final static Property FuenNombre = new Property(5, String.class, "fuenNombre", false, "FUEN_NOMBRE");
        public final static Property MuniNombre = new Property(6, String.class, "muniNombre", false, "MUNI_NOMBRE");
        public final static Property FuenNombreInformante = new Property(7, String.class, "fuenNombreInformante", false, "FUEN_NOMBRE_INFORMANTE");
        public final static Property FuenTelefonoInformante = new Property(8, String.class, "fuenTelefonoInformante", false, "FUEN_TELEFONO_INFORMANTE");
        public final static Property FuenCodigoInterno = new Property(9, String.class, "fuenCodigoInterno", false, "FUEN_CODIGO_INTERNO");
        public final static Property TireId = new Property(10, Long.class, "tireId", false, "TIRE_ID");
    };

    private DaoSession daoSession;


    public FuenteDao(DaoConfig config) {
        super(config);
    }
    
    public FuenteDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
        this.daoSession = daoSession;
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";

        if(ifNotExists){
            Cursor cursor = db.rawQuery("pragma table_info(FUENTE)", null);
            if (cursor != null) {
                if (cursor.getCount() > 0) {
                    Boolean campo1 = false, campo2= false, campo3= false;
                    while (cursor.moveToNext()) {
                        if(cursor.getString(1).equals("FUEN_TELEFONO_INFORMANTE") ){
                            campo1 = true;
                        }
                        if(cursor.getString(1).equals("FUEN_CODIGO_INTERNO") ){
                            campo2 = true;
                        }
                        if(cursor.getString(1).equals("TIRE_ID") ){
                            campo3 = true;
                        }
                    }
                    if(!campo1)db.execSQL("ALTER TABLE FUENTE ADD COLUMN FUEN_TELEFONO_INFORMANTE TEXT");
                    if(!campo2)db.execSQL("ALTER TABLE FUENTE ADD COLUMN FUEN_CODIGO_INTERNO TEXT");
                    if(!campo3)db.execSQL("ALTER TABLE FUENTE ADD COLUMN TIRE_ID INTEGER");
                }
                cursor.close();
            }
        }

        db.execSQL("CREATE TABLE " + constraint + "\"FUENTE\" (" + //
                "\"FUEN_ID\" INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: fuenId
                "\"MUNI_ID\" TEXT," + // 1: muniId
                "\"FUEN_TELEFONO\" TEXT," + // 2: fuenTelefono
                "\"FUEN_DIRECCION\" TEXT," + // 3: fuenDireccion
                "\"FUEN_EMAIL\" TEXT," + // 4: fuenEmail
                "\"FUEN_NOMBRE\" TEXT," + // 5: fuenNombre
                "\"MUNI_NOMBRE\" TEXT," + // 6: muniNombre
                "\"FUEN_NOMBRE_INFORMANTE\" TEXT," + // 7: fuenNombreInformante
                "\"FUEN_TELEFONO_INFORMANTE\" TEXT," + // 8: fuenTelefonoInformante
                "\"FUEN_CODIGO_INTERNO\" TEXT, " + // 9: fuenCodigoInterno
                "\"TIRE_ID\" INTEGER);"); // 10: tireId
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"FUENTE\"";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, Fuente entity) {
        stmt.clearBindings();

        Long fuenId = entity.getFuenId();
        if (fuenId != null) {
            stmt.bindLong(1, fuenId);
        }

        String muniId = entity.getMuniId();
        if (muniId != null) {
            stmt.bindString(2, muniId);
        }
 
        String fuenTelefono = entity.getFuenTelefono();
        if (fuenTelefono != null) {
            stmt.bindString(3, fuenTelefono);
        }
 
        String fuenDireccion = entity.getFuenDireccion();
        if (fuenDireccion != null) {
            stmt.bindString(4, fuenDireccion);
        }
 
        String fuenEmail = entity.getFuenEmail();
        if (fuenEmail != null) {
            stmt.bindString(5, fuenEmail);
        }
 
        String fuenNombre = entity.getFuenNombre();
        if (fuenNombre != null) {
            stmt.bindString(6, fuenNombre);
        }
 
        String muniNombre = entity.getMuniNombre();
        if (muniNombre != null) {
            stmt.bindString(7, muniNombre);
        }
 
        String fuenNombreInformante = entity.getFuenNombreInformante();
        if (fuenNombreInformante != null) {
            stmt.bindString(8, fuenNombreInformante);
        }

        String fuenTelefonoInformante = entity.getFuenTelefonoInformante();
        if (fuenTelefonoInformante != null) {
            stmt.bindString(9, fuenTelefonoInformante);
        }

        /*String fuenCodigoInterno = entity.getFuenCodigoInterno();
        if (fuenCodigoInterno != null) {
            stmt.bindString(10, fuenCodigoInterno);
        }*/

        Long tireId = entity.getTireId();
        if (tireId != null) {
            stmt.bindLong(11, tireId);
        }
    }

    @Override
    protected void attachEntity(Fuente entity) {
        super.attachEntity(entity);
        entity.__setDaoSession(daoSession);
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public Fuente readEntity(Cursor cursor, int offset) {
        Fuente entity = new Fuente( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // fuenId
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // muniId
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // fuenTelefono
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // fuenDireccion
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // fuenEmail
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // fuenNombre
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // muniNombre
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // fuenNombreInformante
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // fuenTelefonoInformante
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // fuenCodigoInterno
            cursor.isNull(offset + 10) ? null : cursor.getLong(offset + 10) // tired
        );
        return entity;
    }


    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, Fuente entity, int offset) {
        entity.setFuenId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setMuniId(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setFuenTelefono(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setFuenDireccion(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setFuenEmail(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setFuenNombre(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setMuniNombre(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setFuenNombreInformante(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setFuenTelefonoInformante(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        //entity.setFuenCodigoInterno(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setTireId(cursor.isNull(offset + 10) ? null : cursor.getLong(offset + 9));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(Fuente entity, long rowId) {
        entity.setFuenId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(Fuente entity) {
        if(entity != null) {
            return entity.getFuenId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
