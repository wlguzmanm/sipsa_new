package co.gov.dane.sipsa.backend.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * DAO for table "SUP_VALOR_ESP_ANT".
*/
public class SupValorEspAntDao extends AbstractDao<SupValorEspAnt, Void> {

    public static final String TABLENAME = "SUP_VALOR_ESP_ANT";

    /**
     * Properties of entity SupValorEspAnt.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property IdPeriodoRecoleccion = new Property(0, Integer.class, "idPeriodoRecoleccion", false, "ID_PERIODO_RECOLECCION");
        public final static Property IdFuenteElemento = new Property(1, Integer.class, "idFuenteElemento", false, "ID_FUENTE_ELEMENTO");
        public final static Property IdElementoTipoEspecificacion = new Property(2, Integer.class, "idElementoTipoEspecificacion", false, "ID_ELEMENTO_TIPO_ESPECIFICACION");
        public final static Property Valor = new Property(3, String.class, "valor", false, "VALOR");
    };


    public SupValorEspAntDao(DaoConfig config) {
        super(config);
    }
    
    public SupValorEspAntDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"SUP_VALOR_ESP_ANT\" (" + //
                "\"ID_PERIODO_RECOLECCION\" INTEGER," + // 0: idPeriodoRecoleccion
                "\"ID_FUENTE_ELEMENTO\" INTEGER," + // 1: idFuenteElemento
                "\"ID_ELEMENTO_TIPO_ESPECIFICACION\" INTEGER," + // 2: idElementoTipoEspecificacion
                "\"VALOR\" TEXT);"); // 3: valor
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"SUP_VALOR_ESP_ANT\"";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, SupValorEspAnt entity) {
        stmt.clearBindings();
 
        Integer idPeriodoRecoleccion = entity.getIdPeriodoRecoleccion();
        if (idPeriodoRecoleccion != null) {
            stmt.bindLong(1, idPeriodoRecoleccion);
        }
 
        Integer idFuenteElemento = entity.getIdFuenteElemento();
        if (idFuenteElemento != null) {
            stmt.bindLong(2, idFuenteElemento);
        }
 
        Integer idElementoTipoEspecificacion = entity.getIdElementoTipoEspecificacion();
        if (idElementoTipoEspecificacion != null) {
            stmt.bindLong(3, idElementoTipoEspecificacion);
        }
 
        String valor = entity.getValor();
        if (valor != null) {
            stmt.bindString(4, valor);
        }
    }

    /** @inheritdoc */
    @Override
    public Void readKey(Cursor cursor, int offset) {
        return null;
    }    

    /** @inheritdoc */
    @Override
    public SupValorEspAnt readEntity(Cursor cursor, int offset) {
        SupValorEspAnt entity = new SupValorEspAnt( //
            cursor.isNull(offset + 0) ? null : cursor.getInt(offset + 0), // idPeriodoRecoleccion
            cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1), // idFuenteElemento
            cursor.isNull(offset + 2) ? null : cursor.getInt(offset + 2), // idElementoTipoEspecificacion
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3) // valor
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, SupValorEspAnt entity, int offset) {
        entity.setIdPeriodoRecoleccion(cursor.isNull(offset + 0) ? null : cursor.getInt(offset + 0));
        entity.setIdFuenteElemento(cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1));
        entity.setIdElementoTipoEspecificacion(cursor.isNull(offset + 2) ? null : cursor.getInt(offset + 2));
        entity.setValor(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
     }
    
    /** @inheritdoc */
    @Override
    protected Void updateKeyAfterInsert(SupValorEspAnt entity, long rowId) {
        // Unsupported or missing PK type
        return null;
    }
    
    /** @inheritdoc */
    @Override
    public Void getKey(SupValorEspAnt entity) {
        return null;
    }

    /** @inheritdoc */
    @Override
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
